version: "3.7"

networks:
  test:

services:

  site:
    image: nginx:stable-alpine
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ../:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - mysql
      - redis
    networks:
      - test

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    tty: true
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: test
      MYSQL_USER: test
      MYSQL_PASSWORD: test
      MYSQL_ROOT_PASSWORD: test
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./mysql:/var/lib/mysql
    networks:
      - test

  php:
    build:
      context: ./php
      dockerfile: php.dockerfile
    container_name: php
    volumes:
      - ../:/var/www
    working_dir: /var/www
    ports:
      - "9000:9000"
    networks:
      - test

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
        - "6379:6379"
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81
    volumes:
        - ./redis:/data
    networks:
        - test

  artisan:
      build:
          context: ./php
          dockerfile: php.dockerfile
      container_name: artisan
      volumes:
          - ../:/var/www
      depends_on:
          - mysql
      working_dir: /var/www
      entrypoint: [ 'php', '/var/www/artisan' ]
      networks:
          - test
